#!/usr/bin/bash

# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

#####################################################################################
###   Configure wrapper for ATOS System at ECMWF/Bologna (From 2020 procurement)  ###
###       Atos Sequana XH2000                                                     ###
###       Red Hat Enterprise Linux                                                ###
#####################################################################################


set -eu

SCRIPT_DIR=$(cd "$(dirname "$0")">/dev/null; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../..">/dev/null; pwd)

MODULES='prgenv/intel intel/2021.4.0 hpcx-openmpi/2.9.0 hdf5/1.10.6 netcdf4/4.7.4 intel-mkl/19.0.5 ecmwf-toolbox/2021.12.0.0'

################################################################################

BUILD_ENV=". $MODULESHOME/init/sh ; module purge ;  module load $MODULES; FC=mpif90 ; CC=mpicc;"
eval "$BUILD_ENV"

MKL_ROOT=$MKLROOT
BLAS_LAPACK_LDFLAGS='-lmkl_gf_lp64 -lmkl_sequential -lmkl_core'

CC='mpicc'
CFLAGS='-gdwarf-4 -O3 -qno-opt-dynamic-align -ftz -march=native -fp-model=precise'
CPPFLAGS="$ECCODES_INCLUDE $HDF5_INCLUDE $NETCDF4_INCLUDE"

FC='mpif90'
FCFLAGS="$ECCODES_INCLUDE $HDF5_INCLUDE $NETCDF4_INCLUDE"
LDFLAGS="$ECCODES_LIB $HDF5_LIB $NETCDF4_LIB  ${BLAS_LAPACK_LDFLAGS} -L${MKL_ROOT}/lib/intel64"

LIBS=""

# Avoid Error: Rank mismatch between actual argument at (1) and actual argument at (2) (scalar and rank-1)
#ICON_FCFLAGS='-O2 -assume realloc_lhs -ftz -DDO_NOT_COMBINE_PUT_AND_NOCHECK'
ICON_FCFLAGS='-O2 -assume realloc_lhs -ftz -fp-model=precise'
ICON_ECRAD_FCFLAGS="-D__ECRAD_LITTLE_ENDIAN"

EXTRA_CONFIG='--disable-ocean --enable-grib2 --disable-coupling --enable-ecrad --disable-openmp --disable-jsbach --enable-mixed-precision'
#EXTRA_CONFIG='--disable-mpi-checks --disable-rpaths --enable-active-target-sync --enable-ecrad --disable-ocean --disable-coupling --enable-grib2 --enable-loop-exchange --enable-mixed-precision --enable-openmp'

################################################################################

${ICON_DIR}/configure \
BUILD_ENV="$BUILD_ENV" \
CC="$CC" \
CFLAGS="$CFLAGS" \
CPPFLAGS="$CPPFLAGS" \
FC="$FC" \
FCFLAGS="$FCFLAGS" \
ICON_FCFLAGS="$ICON_FCFLAGS" \
ICON_ECRAD_FCFLAGS="$ICON_ECRAD_FCFLAGS" \
LDFLAGS="$LDFLAGS" \
LIBS="$LIBS" \
${EXTRA_CONFIG} \
"$@"

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*.in' --exclude='.*' --exclude='standard_*'
  ln -sf -t run/ ${ICON_DIR}/run/standard_*
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

